From f405c51fe09474a99574414f90c82f20986226b2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Erdmann?= <dywi@mailerd.de>
Date: Tue, 26 Aug 2014 00:30:36 +0200
Subject: [PATCH] multiplex sysfs hwmon lookup

Seems like sysfs paths have changed for hwmon coretemp/sensors
(as of kernel 3.15/3.16), look for information in both places.

Other changes:
* non-Thinkpads only: report speed of all fans, not just the first one
* eliminate "cat | awk" pipe (IBMFAN)
---
 tlp-stat | 62 ++++++++++++++++++++++++++++++++++++++++++--------------------
 1 file changed, 42 insertions(+), 20 deletions(-)

diff --git a/tlp-stat b/tlp-stat
index 939aabe..9e106ad 100755
--- a/tlp-stat
+++ b/tlp-stat
@@ -21,9 +21,13 @@ readonly TPACPI=/sys/devices/platform/thinkpad_acpi
 
 
 readonly IBMTHERMAL=/proc/acpi/ibm/thermal
-readonly CORETEMP='/sys/devices/platform/coretemp.0'
+readonly CORETEMP_DIRS='\
+/sys/devices/platform/coretemp.0 \
+/sys/devices/platform/coretemp.0/hwmon/hwmon*'
 readonly IBMFAN=/proc/acpi/ibm/fan
-readonly HWMONFAN='/sys/class/hwmon/hwmon*/device'
+readonly HWMONFAN_DIRS='\
+/sys/class/hwmon/hwmon*/device \
+/sys/class/hwmon/hwmon*'
 
 readonly DEBUGLOG=/var/log/debug
 
@@ -136,6 +140,24 @@ print_tpacpi_thresholds () { # $1: BAT0/BAT1; $2: bat # = 1/2
     return 0
 }
 
+# @stdout glob_files ( glob_pattern, dir[, dir...] )
+#
+#  Nested for-loop that applies a glob expression to several directories
+#  (or file path prefixes) and prints matching file paths to stdout.
+#
+glob_files () {
+    [ -n "${1-}" ] || return 64
+    local glob_pattern file_iter
+
+    glob_pattern="${1}"
+
+    while shift && [ $# -gt 0 ]; do
+        for file_iter in ${1}${glob_pattern}; do
+            [ ! -f "${file_iter}" ] || echo "${file_iter}"
+        done
+    done
+}
+
 read_args () {
     for a in $*; do
         case $a in
@@ -342,17 +364,14 @@ if [ "$show_temp" = "1" ] || [ "$show_all" = "1" ]; then
     else
         # use sensors
         cmax=0
-        for sens in $CORETEMP/temp?_input; do
-            if [ -f $sens ]; then
-                if cat ${sens%input}label | grep -q "Physical"; then
-                    # package info is available -> ignore remaining sensors
-                    cmax=$(cat $sens)
-                    break
-                else
-                    # core info -> find max value
-                    ctemp=$(cat $sens)
-                    [ $ctemp -gt $cmax ] && cmax=$ctemp
-                fi
+        for sens in $(glob_files '/temp?*_input' $CORETEMP_DIRS); do
+            if grep -q -- 'Physical' ${sens%input}label 2>/dev/null; then
+                # package info is available -> ignore remaining sensors
+                read -r cmax < $sens
+                break
+            else
+                # core info -> find max value
+                read -r ctemp < $sens && [ $ctemp -gt $cmax ] && cmax=$ctemp
             fi
         done
         if [ $cmax -gt 0 ]; then
@@ -364,17 +383,20 @@ if [ "$show_temp" = "1" ] || [ "$show_all" = "1" ]; then
     # --- show fan speed
     if [ -f $IBMFAN ]; then
         # use thinkpad-specific sysfile
-        cat $IBMFAN | \
-            awk '$1 ~ /speed:/ { printf "'$IBMFAN'     = %5d [/min]\n", $2 }'
+        awk '$1 ~ /speed:/ { printf "'$IBMFAN'     = %5d [/min]\n", $2 }' $IBMFAN
     else
         # use hwmon
-        for fan in $HWMONFAN/fan?_input; do
-            if [ -f $fan ]; then
-                printf "Fan speed              = %5d [/min]\n" $(cat $fan)
-                break;
+        have_any_fan=
+        for fan in $(glob_files '/fan?*_input' $HWMONFAN_DIRS); do
+            if read -r fan_speed < $fan; then
+                fan_name="${fan##*/}"; fan_name="${fan_name%_input}"
+                have_any_fan=y
+
+                printf "Fan speed (%s)       = %5d [/min]\n" \
+                    ${fan_name} ${fan_speed}
             fi
         done
-        if [ ! -f $fan ]; then
+        if [ -z "${have_any_fan}" ]; then
             printf "Fan speed              = (not available)\n"
         fi
     fi
-- 
2.0.4

